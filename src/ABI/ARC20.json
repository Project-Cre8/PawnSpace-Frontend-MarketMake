{
  "contractName": "ERC20_test",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20_test.sol\":\"ERC20_test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/EIP712.sol\":{\"keccak256\":\"0x46701bc930341c67c14673818303e0c2d910a4a3f279775fe5e8c019cf9a5da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b89b2f4891bf85065606b64382978f7341ec2a38fa0a9bbdf4de153bfa224643\",\"dweb:/ipfs/QmYhxpwzTmHPS7b2jSsw4gVQQzGNjJjZnQbSKFPRvUDe3K\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20Permit.sol\":{\"keccak256\":\"0x832666f7104b63fa4d86aad62c963010889b1a6f4862be9bf4baf1ea170379c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd472db5e9e4f031405981c3a1e28c01f338e040412e2ab0da6eca848a6e1ea\",\"dweb:/ipfs/QmUdePoLXsT8K3d45ugnhB9tpVzKapByPVXQ9KzePJXoYp\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20_test.sol\":{\"keccak256\":\"0xd2d30736fb188748be17a02dfc32e58c03b80d277a0bdb20e7e16630bbef9c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f7b09735d7802c2fa5bab8cd5f9c6c15cb127b361d4896b1940cf9a9dd9311\",\"dweb:/ipfs/QmS7f3t2PF1iMboAwKDBKsgZ6xcwXBYrMnRxkBryWjnyt4\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/IERC20Permit.sol\":{\"keccak256\":\"0x48800f071c762303177aa829c3293ab79c9ef85c9fdfaab379b478f52a3be71f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a26e669c3e3ea1dda9d01e0c3f44c9744d7282cb817f8255e6e11210c2c20754\",\"dweb:/ipfs/QmRhriH7uaSc88nvycLWYDoNAX4XGps3BpKJvVYthMymcu\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]}},\"version\":1}",
  "bytecode": "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b506040516200144538038062001445833981810160405260208110156200005d57600080fd5b5051604080518082018252600a81526922a92199182a37b5b2b760b11b6020828101919091528251808401845260018152603160f81b8183015283518085018552600980825268115490cc8c1d195cdd60ba1b828501818152875180890190985291875293860193909352805193948594929391929091620000e3916003919062000362565b508051620000f990600490602084019062000362565b50506005805460ff1916601217905550815160208084019190912082519183019190912060c082905260e08190527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015262000184565b60a0526200016281848462000188565b60805261010052506200017d935033925084915050620001ec565b506200040e565b4690565b60008383836200019762000184565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b6001600160a01b03821662000248576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200025660008383620002fb565b62000272816002546200030060201b620008231790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002a59183906200082362000300821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000828201838110156200035b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200039a5760008555620003e5565b82601f10620003b557805160ff1916838001178555620003e5565b82800160010185558215620003e5579182015b82811115620003e5578251825591602001919060010190620003c8565b50620003f3929150620003f7565b5090565b5b80821115620003f35760008155600101620003f8565b60805160a05160c05160e0516101005161012051610fed62000458600039806106b0525080610bc3525080610c05525080610be4525080610b6a525080610b9a5250610fed6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146102a2578063a9059cbb146102ce578063d505accf146102fa578063dd62ed3e1461034d576100ea565b806370a082311461024e5780637ecebe001461027457806395d89b411461029a576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc5780633644e5151461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761037b565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610412565b604080519115158252519081900360200190f35b6101b461042f565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610435565b6102046104bc565b6040805160ff9092168252519081900360200190f35b6101b46104c5565b6101986004803603604081101561023857600080fd5b506001600160a01b0381351690602001356104d4565b6101b46004803603602081101561026457600080fd5b50356001600160a01b0316610522565b6101b46004803603602081101561028a57600080fd5b50356001600160a01b031661053d565b6100f7610564565b610198600480360360408110156102b857600080fd5b506001600160a01b0381351690602001356105c5565b610198600480360360408110156102e457600080fd5b506001600160a01b03813516906020013561062d565b61034b600480360360e081101561031057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610641565b005b6101b46004803603604081101561036357600080fd5b506001600160a01b03813581169160200135166107f8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b505050505090505b90565b600061042661041f610884565b8484610888565b50600192915050565b60025490565b6000610442848484610974565b6104b28461044e610884565b6104ad85604051806060016040528060288152602001610f22602891396001600160a01b038a1660009081526001602052604081209061048c610884565b6001600160a01b031681526020810191909152604001600020549190610acf565b610888565b5060019392505050565b60055460ff1690565b60006104cf610b66565b905090565b60006104266104e1610884565b846104ad85600160006104f2610884565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610823565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b038116600090815260066020526040812061055e90610c30565b92915050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b60006104266105d2610884565b846104ad85604051806060016040528060258152602001610f9360259139600160006105fc610884565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610acf565b600061042661063a610884565b8484610974565b83421115610696576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f0000000000000000000000000000000000000000000000000000000000000000908990899089906106df90610c30565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b031681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061074882610c34565b9050600061075882878787610c80565b9050896001600160a01b0316816001600160a01b0316146107c0576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a1660009081526006602052604090206107e190610dfe565b6107ec8a8a8a610888565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561087d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166108cd5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f6f6024913960400191505060405180910390fd5b6001600160a01b0382166109125760405162461bcd60e51b8152600401808060200182810382526022815260200180610e966022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109b95760405162461bcd60e51b8152600401808060200182810382526025815260200180610f4a6025913960400191505060405180910390fd5b6001600160a01b0382166109fe5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e736023913960400191505060405180910390fd5b610a09838383610e07565b610a4681604051806060016040528060268152602001610eb8602691396001600160a01b0386166000908152602081905260409020549190610acf565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a759082610823565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b5e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b23578181015183820152602001610b0b565b50505050905090810190601f168015610b505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f0000000000000000000000000000000000000000000000000000000000000000610b91610e0c565b1415610bbe57507f000000000000000000000000000000000000000000000000000000000000000061040f565b610c297f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610e10565b905061040f565b5490565b6000610c3e610b66565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ce15760405162461bcd60e51b8152600401808060200182810382526022815260200180610ede6022913960400191505060405180910390fd5b8360ff16601b1480610cf657508360ff16601c145b610d315760405162461bcd60e51b8152600401808060200182810382526022815260200180610f006022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d8d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610df5576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b80546001019055565b505050565b4690565b6000838383610e1d610e0c565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b0316815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e77607f503294849409c24fcdfc073f0465b41468260f112a42ed676154e5f1264736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146102a2578063a9059cbb146102ce578063d505accf146102fa578063dd62ed3e1461034d576100ea565b806370a082311461024e5780637ecebe001461027457806395d89b411461029a576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc5780633644e5151461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761037b565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610412565b604080519115158252519081900360200190f35b6101b461042f565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610435565b6102046104bc565b6040805160ff9092168252519081900360200190f35b6101b46104c5565b6101986004803603604081101561023857600080fd5b506001600160a01b0381351690602001356104d4565b6101b46004803603602081101561026457600080fd5b50356001600160a01b0316610522565b6101b46004803603602081101561028a57600080fd5b50356001600160a01b031661053d565b6100f7610564565b610198600480360360408110156102b857600080fd5b506001600160a01b0381351690602001356105c5565b610198600480360360408110156102e457600080fd5b506001600160a01b03813516906020013561062d565b61034b600480360360e081101561031057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610641565b005b6101b46004803603604081101561036357600080fd5b506001600160a01b03813581169160200135166107f8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b505050505090505b90565b600061042661041f610884565b8484610888565b50600192915050565b60025490565b6000610442848484610974565b6104b28461044e610884565b6104ad85604051806060016040528060288152602001610f22602891396001600160a01b038a1660009081526001602052604081209061048c610884565b6001600160a01b031681526020810191909152604001600020549190610acf565b610888565b5060019392505050565b60055460ff1690565b60006104cf610b66565b905090565b60006104266104e1610884565b846104ad85600160006104f2610884565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610823565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b038116600090815260066020526040812061055e90610c30565b92915050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b60006104266105d2610884565b846104ad85604051806060016040528060258152602001610f9360259139600160006105fc610884565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610acf565b600061042661063a610884565b8484610974565b83421115610696576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b03871660009081526006602052604081207f0000000000000000000000000000000000000000000000000000000000000000908990899089906106df90610c30565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b031681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061074882610c34565b9050600061075882878787610c80565b9050896001600160a01b0316816001600160a01b0316146107c0576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a1660009081526006602052604090206107e190610dfe565b6107ec8a8a8a610888565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561087d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166108cd5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f6f6024913960400191505060405180910390fd5b6001600160a01b0382166109125760405162461bcd60e51b8152600401808060200182810382526022815260200180610e966022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109b95760405162461bcd60e51b8152600401808060200182810382526025815260200180610f4a6025913960400191505060405180910390fd5b6001600160a01b0382166109fe5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e736023913960400191505060405180910390fd5b610a09838383610e07565b610a4681604051806060016040528060268152602001610eb8602691396001600160a01b0386166000908152602081905260409020549190610acf565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a759082610823565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b5e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b23578181015183820152602001610b0b565b50505050905090810190601f168015610b505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f0000000000000000000000000000000000000000000000000000000000000000610b91610e0c565b1415610bbe57507f000000000000000000000000000000000000000000000000000000000000000061040f565b610c297f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610e10565b905061040f565b5490565b6000610c3e610b66565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ce15760405162461bcd60e51b8152600401808060200182810382526022815260200180610ede6022913960400191505060405180910390fd5b8360ff16601b1480610cf657508360ff16601c145b610d315760405162461bcd60e51b8152600401808060200182810382526022815260200180610f006022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d8d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610df5576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b80546001019055565b505050565b4690565b6000838383610e1d610e0c565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b0316815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e77607f503294849409c24fcdfc073f0465b41468260f112a42ed676154e5f1264736f6c63430007050033",
  "immutableReferences": {
    "1161": [
      {
        "length": 32,
        "start": 2970
      }
    ],
    "1163": [
      {
        "length": 32,
        "start": 2922
      }
    ],
    "1165": [
      {
        "length": 32,
        "start": 3044
      }
    ],
    "1167": [
      {
        "length": 32,
        "start": 3077
      }
    ],
    "1169": [
      {
        "length": 32,
        "start": 3011
      }
    ],
    "1330": [
      {
        "length": 32,
        "start": 1712
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "103:157:6:-:0;;;1004:95:5;950:149;;145:112:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;145:112:6;1338:84:5;;;;;;;;;;;-1:-1:-1;;;145:112:6;1338:84:5;;;;;;;2341:564:4;;;;;;;;;;-1:-1:-1;;;2341:564:4;;;;1956:145:13;;;;;;;;;;;-1:-1:-1;;;1956:145:13;;;;;;;;;;;;;;;;;;;;;;;;2030:13;;1338:84:5;;;;2341:564:4;;1956:145:13;;;;2030:13;;:5;;1956:145;2030:13;:::i;:::-;-1:-1:-1;2053:17:13;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:13;:14;;-1:-1:-1;;2080:14:13;2092:2;2080:14;;;-1:-1:-1;2428:22:4;;;;;;;;;;2485:25;;;;;;;;;2659;;;;2695:31;;;;2553:95;2756:13;:11;:13::i;:::-;2737:32;;2807:58;2829:8;2839:10;2851:13;2807:21;:58::i;:::-;2780:85;;2876:21;;-1:-1:-1;217:32:6::1;::::0;-1:-1:-1;223:10:6::1;::::0;-1:-1:-1;235:13:6;;-1:-1:-1;;217:5:6::1;:32::i;:::-;145:112:::0;103:157;;4359:326:4;4658:9;;4632:46::o;3285:247::-;3421:7;3469:8;3479:4;3485:7;3494:13;:11;:13::i;:::-;3517:4;3458:65;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3458:65:4;;;;;;;;;;;;;;;;;;;;;;;;3448:76;;;;;;3441:83;;3285:247;;;;;:::o;7790:370:13:-;-1:-1:-1;;;;;7873:21:13;;7865:65;;;;;-1:-1:-1;;;7865:65:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:24;8033:6;8016:12;;:16;;;;;;:24;;;;:::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:13;;:9;:18;;;;;;;;;;;;:30;;8094:6;;8071:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8050:18:13;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;10651:92::-;;;;:::o;882:176:12:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:12:o;103:157:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;103:157:6;;;-1:-1:-1;103:157:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "103:157:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4202:166:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3209:98;;;:::i;:::-;;;;;;;;;;;;;;;;4835:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4835:317:13;;;;;;;;;;;;;;;;;:::i;3068:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2556:115:5;;;:::i;5547:215:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5547:215:13;;;;;;;;:::i;3365:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3365:117:13;-1:-1:-1;;;;;3365:117:13;;:::i;2306:120:5:-;;;;;;;;;;;;;;;;-1:-1:-1;2306:120:5;-1:-1:-1;;;;;2306:120:5;;:::i;2360:85:13:-;;;:::i;6249:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6249:266:13;;;;;;;;:::i;3685:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3685:172:13;;;;;;;;:::i;1488:752:5:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1488:752:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3915:149:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3915:149:13;;;;;;;;;;:::i;2166:81::-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:13;4202:166;;;;:::o;3209:98::-;3288:12;;3209:98;:::o;4835:317::-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:13;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:13;;;;;;;;;;;;-1:-1:-1;5034:33:13;;;:89;:37;:89::i;:::-;5003:8;:121::i;:::-;-1:-1:-1;5141:4:13;4835:317;;;;;:::o;3068:81::-;3133:9;;;;3068:81;:::o;2556:115:5:-;2616:7;2643:20;:18;:20::i;:::-;2636:27;;2556:115;:::o;5547:215:13:-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:13;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:13;;;:34;;;;;;;;;;;:38;:50::i;3365:117::-;-1:-1:-1;;;;;3457:18:13;3431:7;3457:18;;;;;;;;;;;;3365:117::o;2306:120:5:-;-1:-1:-1;;;;;2394:14:5;;2367:7;2394:14;;;:7;:14;;;;;:24;;:22;:24::i;:::-;2387:31;2306:120;-1:-1:-1;;2306:120:5:o;2360:85:13:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;6249:266;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:13;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:13;;;:34;;;;;;;;;;;:96;:38;:96::i;3685:172::-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;1488:752:5:-;1787:8;1768:15;:27;;1760:69;;;;;-1:-1:-1;;;1760:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1938:14:5;;1842:18;1938:14;;;:7;:14;;;;;1897:16;;1915:5;;1922:7;;1931:5;;1938:24;;:22;:24::i;:::-;1964:8;1886:87;;;;;;;;;;;-1:-1:-1;;;;;1886:87:5;;;;;;-1:-1:-1;;;;;1886:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:98;;;;;;1842:132;;1987:12;2002:28;2019:10;2002:16;:28::i;:::-;1987:43;;2043:14;2060:22;2068:4;2074:1;2077;2080;2060:7;:22::i;:::-;2043:39;;2111:5;-1:-1:-1;;;;;2101:15:5;:6;-1:-1:-1;;;;;2101:15:5;;2093:58;;;;;-1:-1:-1;;;2093:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2164:14:5;;;;;;:7;:14;;;;;:26;;:24;:26::i;:::-;2201:31;2210:5;2217:7;2226:5;2201:8;:31::i;:::-;1488:752;;;;;;;;;;:::o;3915:149:13:-;-1:-1:-1;;;;;4030:18:13;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;882:176:12:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:12:o;598:104:9:-;685:10;598:104;:::o;9313:340:13:-;-1:-1:-1;;;;;9414:19:13;;9406:68;;;;-1:-1:-1;;;9406:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9492:21:13;;9484:68;;;;-1:-1:-1;;;9484:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9563:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;6989:530::-;-1:-1:-1;;;;;7094:20:13;;7086:70;;;;-1:-1:-1;;;7086:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7174:23:13;;7166:71;;;;-1:-1:-1;;;7166:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:13;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7306:17:13;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;-1:-1:-1;;;;;7407:20:13;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;1754:187:12:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:12;;;1754:187::o;2996:281:4:-;3049:7;3090:16;3073:13;:11;:13::i;:::-;:33;3069:201;;;-1:-1:-1;3130:24:4;3123:31;;3069:201;3194:64;3216:10;3228:12;3242:15;3194:21;:64::i;:::-;3187:71;;;;1106:112:21;1197:14;;1106:112::o;4174:177:4:-;4243:7;4309:20;:18;:20::i;:::-;4331:10;4280:62;;;;;;-1:-1:-1;;;4280:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4270:73;;;;;;4263:80;;4174:177;;;:::o;2825:1512:5:-;2953:7;3892:66;3878:80;;;3856:164;;;;-1:-1:-1;;;3856:164:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:1;:7;;4044:2;4039:7;:18;;;;4050:1;:7;;4055:2;4050:7;4039:18;4031:65;;;;-1:-1:-1;;;4031:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4194:14;4211:24;4221:4;4227:1;4230;4233;4211:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4211:24:5;;-1:-1:-1;;4211:24:5;;;-1:-1:-1;;;;;;;4254:20:5;;4246:57;;;;;-1:-1:-1;;;4246:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4323:6;2825:1512;-1:-1:-1;;;;;2825:1512:5:o;1224:178:21:-;1376:19;;1394:1;1376:19;;;1224:178::o;10651:92:13:-;;;;:::o;4359:326:4:-;4658:9;;4632:46::o;3285:247::-;3421:7;3469:8;3479:4;3485:7;3494:13;:11;:13::i;:::-;3517:4;3458:65;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3458:65:4;;;;;;;;;;;;;;;;;;;;;;;;3448:76;;;;;;3441:83;;3285:247;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.8.0;\r\n// \u0010\r\nimport './ERC20Permit.sol';\r\n\r\ncontract ERC20_test is ERC20Permit {\r\n    constructor(uint256 initialSupply) ERC20Permit('ERC20Token') {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20_test.sol",
  "ast": {
    "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20_test.sol",
    "exportedSymbols": {
      "Context": [
        1630
      ],
      "Counters": [
        3893
      ],
      "EIP712": [
        1305
      ],
      "ERC20": [
        2398
      ],
      "ERC20Permit": [
        1510
      ],
      "ERC20_test": [
        1531
      ],
      "IERC20": [
        2476
      ],
      "IERC20Permit": [
        1607
      ],
      "SafeMath": [
        1895
      ]
    },
    "id": 1532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1512,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:6"
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20Permit.sol",
        "file": "./ERC20Permit.sol",
        "id": 1513,
        "nodeType": "ImportDirective",
        "scope": 1532,
        "sourceUnit": 1511,
        "src": "72:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1514,
              "name": "ERC20Permit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1510,
              "src": "126:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Permit_$1510",
                "typeString": "contract ERC20Permit"
              }
            },
            "id": 1515,
            "nodeType": "InheritanceSpecifier",
            "src": "126:11:6"
          }
        ],
        "contractDependencies": [
          1305,
          1510,
          1607,
          1630,
          2398,
          2476
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1531,
        "linearizedBaseContracts": [
          1531,
          1510,
          1305,
          1607,
          2398,
          2476,
          1630
        ],
        "name": "ERC20_test",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "206:51:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "223:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "223:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1526,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "235:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1523,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "217:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "217:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "217:32:6"
                }
              ]
            },
            "id": 1530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4552433230546f6b656e",
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "192:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                      "typeString": "literal_string \"ERC20Token\""
                    },
                    "value": "ERC20Token"
                  }
                ],
                "id": 1521,
                "modifierName": {
                  "id": 1519,
                  "name": "ERC20Permit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1510,
                  "src": "180:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1510_$",
                    "typeString": "type(contract ERC20Permit)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "180:25:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "157:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:23:6"
            },
            "returnParameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:0:6"
            },
            "scope": 1531,
            "src": "145:112:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1532,
        "src": "103:157:6"
      }
    ],
    "src": "33:229:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20_test.sol",
    "exportedSymbols": {
      "Context": [
        1630
      ],
      "Counters": [
        3893
      ],
      "EIP712": [
        1305
      ],
      "ERC20": [
        2398
      ],
      "ERC20Permit": [
        1510
      ],
      "ERC20_test": [
        1531
      ],
      "IERC20": [
        2476
      ],
      "IERC20Permit": [
        1607
      ],
      "SafeMath": [
        1895
      ]
    },
    "id": 1532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1512,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:6"
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/test/ERC20Permit.sol",
        "file": "./ERC20Permit.sol",
        "id": 1513,
        "nodeType": "ImportDirective",
        "scope": 1532,
        "sourceUnit": 1511,
        "src": "72:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1514,
              "name": "ERC20Permit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1510,
              "src": "126:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Permit_$1510",
                "typeString": "contract ERC20Permit"
              }
            },
            "id": 1515,
            "nodeType": "InheritanceSpecifier",
            "src": "126:11:6"
          }
        ],
        "contractDependencies": [
          1305,
          1510,
          1607,
          1630,
          2398,
          2476
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1531,
        "linearizedBaseContracts": [
          1531,
          1510,
          1305,
          1607,
          2398,
          2476,
          1630
        ],
        "name": "ERC20_test",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "206:51:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "223:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "223:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1526,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "235:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1523,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "217:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "217:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "217:32:6"
                }
              ]
            },
            "id": 1530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4552433230546f6b656e",
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "192:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                      "typeString": "literal_string \"ERC20Token\""
                    },
                    "value": "ERC20Token"
                  }
                ],
                "id": 1521,
                "modifierName": {
                  "id": 1519,
                  "name": "ERC20Permit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1510,
                  "src": "180:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1510_$",
                    "typeString": "type(contract ERC20Permit)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "180:25:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "157:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:23:6"
            },
            "returnParameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:0:6"
            },
            "scope": 1531,
            "src": "145:112:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1532,
        "src": "103:157:6"
      }
    ],
    "src": "33:229:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-19T23:26:38.490Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "details": "See {IERC20Permit-nonces}."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "See {IERC20Permit-permit}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}