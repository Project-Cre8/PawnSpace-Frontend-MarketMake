{
  "contractName": "PawnFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SpaceCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allSpaces",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSpace",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allSpacesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "createSpace",
      "outputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SpaceCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSpaces\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allSpacesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnFactory.sol\":\"PawnFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnFactory.sol\":{\"keccak256\":\"0x2f7acaa7f6a8a4e702635de490b11a13a067bf787d5eda4f06f31fa21de0707b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://28a1d5302a3158311013a80545e3c029bf247e8ed5297f8dd08bc0a856cb8188\",\"dweb:/ipfs/Qmc89a2Pd4sn9Lem2ET9dt79DJJ9JKbGmuUEUzGd471yYL\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnSpace.sol\":{\"keccak256\":\"0x77483c3be5852536a72b04c7272535a7d71c97fcbc4d37b9692c723d05d309fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a8a51701da0536052fcc853850c1f9c1e5ab370227f6e3d01b4b0a9b69c8cf22\",\"dweb:/ipfs/QmXpvhUrM2w8jPakM4urWYtxKyiyrpwk8u7ceyMBN5HcET\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/interfaces/IPawnFactory.sol\":{\"keccak256\":\"0xa12f5c78513aa41236349a74ceab7b90ea4dde269e6bc05bb31fdba56138803a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5799d2d6a3d3d9214c064c2b6bbf65697658a69430d2c5836ef915570d84c77c\",\"dweb:/ipfs/QmQWLbY61YsJpYZ8Ngf5T9gUKDRJwBvRJK9Sumw8uxsFve\"]},\"/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/interfaces/IPawnSpace.sol\":{\"keccak256\":\"0x5a8b2002f4eb82aa8ff1bda5726b2c159c721163ff1b54c343defbec42ae0a37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://35ff37d3756043e34007b9b8f09af10d0d2150a01b38729877564bbc46034334\",\"dweb:/ipfs/QmY1Vq8yG25eXPbnk3xDwKZfFoL7qWqorL5YLPs39KpGfs\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516138c03803806138c08339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b0390921691909117905561385d806100636000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389cecd311161005b57806389cecd31146100f0578063a2e74af614610116578063a8cb47131461013e578063f46901ed1461016457610088565b8063017e7e581461008d578063094b7415146100b157806349c97251146100b9578063872b8580146100d3575b600080fd5b61009561018a565b604080516001600160a01b039092168252519081900360200190f35b610095610199565b6100c16101a8565b60408051918252519081900360200190f35b610095600480360360208110156100e957600080fd5b50356101ae565b6100956004803603602081101561010657600080fd5b50356001600160a01b03166101d8565b61013c6004803603602081101561012c57600080fd5b50356001600160a01b0316610420565b005b6100956004803603602081101561015457600080fd5b50356001600160a01b031661049a565b61013c6004803603602081101561017a57600080fd5b50356001600160a01b03166104b5565b6000546001600160a01b031681565b6001546001600160a01b031681565b60035490565b600381815481106101be57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b038216610235576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a205a45524f5f4144445245535300000000000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526002602052604090205416156102a2576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a2053504143455f45584953545300000000000000604482015290519081900360640190fd5b6060604051806020016102b49061052f565b6020820181038252601f19601f82011660405250905060008360405160200180826001600160a01b031660601b8152601401915050604051602081830303815290604052805190602001209050808251602084016000f59250826001600160a01b031663c4d66de8856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050506001600160a01b0380861660008181526002602090815260408083208054958a166001600160a01b0319968716811790915560038054600181018255948190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90940180549096168117909555915482519485529084015280519193507f9d92b1372c0fff8e3ee90bd3de318492ab9f2fa5925f75cfa292e7a2b55515e1928290030190a25050919050565b6001546001600160a01b03163314610478576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b0316331461050d576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6132eb8061053d8339019056fe608060405260016011553480156200001657600080fd5b5060408051808201825260098152685061776e537061636560b81b60208083019190915282518084019093526003835262282ba760e91b9083015290620000646301ffc9a760e01b620000e0565b81516200007990600690602085019062000165565b5080516200008f90600790602084019062000165565b50620000a26380ac58cd60e01b620000e0565b620000b4635b5e139f60e01b620000e0565b620000c663780e9d6360e01b620000e0565b5050600a80546001600160a01b0319163317905562000211565b6001600160e01b0319808216141562000140576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200019d5760008555620001e8565b82601f10620001b857805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e8578251825591602001919060010190620001cb565b50620001f6929150620001fa565b5090565b5b80821115620001f65760008155600101620001fb565b6130ca80620002216000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636c0360eb1161010f578063b88d4fde116100a2578063c87b56dd11610071578063c87b56dd14610795578063d06fcba8146107b2578063d09ef241146107ba578063e985e9c51461085e576101f0565b8063b88d4fde14610699578063ba9a7a561461075f578063c45a015514610767578063c4d66de81461076f576101f0565b806395d89b41116100de57806395d89b41146105fe578063a22cb46514610606578063a846c2fd14610634578063a85c38ef14610651576101f0565b80636c0360eb1461055b57806370a0823114610563578063761610fc146105895780638a72ea6a146105a6576101f0565b80632e1a7d4d1161018757806342842e0e1161015657806342842e0e146104a05780634579268a146104d65780634f6ccce7146105215780636352211e1461053e576101f0565b80632e1a7d4d146103f75780632e2dc43e146104145780632f745c591461046c578063407384e914610498576101f0565b806313789680116101c3578063137896801461031457806318160ddd1461039c57806322f37ae0146103a457806323b872dd146103c1576101f0565b806301ffc9a7146101f557806306fdde0314610230578063081812fc146102ad578063095ea7b3146102e6575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b03191661088c565b604080519115158252519081900360200190f35b6102386108af565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360208110156102c357600080fd5b5035610945565b604080516001600160a01b039092168252519081900360200190f35b610312600480360360408110156102fc57600080fd5b506001600160a01b0381351690602001356109a7565b005b61038a6004803603606081101561032a57600080fd5b81019060208101813564010000000081111561034557600080fd5b82018360208201111561035757600080fd5b8035906020019184602083028401116401000000008311171561037957600080fd5b919350915080359060200135610a82565b60408051918252519081900360200190f35b61038a610ce3565b610312600480360360208110156103ba57600080fd5b5035610cf4565b610312600480360360608110156103d757600080fd5b506001600160a01b03813581169160208101359091169060400135610f1f565b6103126004803603602081101561040d57600080fd5b5035610f76565b61041c61121e565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610458578181015183820152602001610440565b505050509050019250505060405180910390f35b61038a6004803603604081101561048257600080fd5b506001600160a01b0381351690602001356112ff565b61041c61132a565b610312600480360360608110156104b657600080fd5b506001600160a01b038135811691602081013590911690604001356114c8565b6104f3600480360360208110156104ec57600080fd5b50356114e3565b604080519485526001600160a01b039093166020850152838301919091526060830152519081900360800190f35b61038a6004803603602081101561053757600080fd5b5035611582565b6102ca6004803603602081101561055457600080fd5b5035611598565b6102386115c0565b61038a6004803603602081101561057957600080fd5b50356001600160a01b0316611621565b61038a6004803603602081101561059f57600080fd5b5035611689565b6105c3600480360360208110156105bc57600080fd5b503561168f565b604080519687526001600160a01b039095166020870152858501939093526060850191909152608084015260a0830152519081900360c00190f35b6102386116ce565b6103126004803603604081101561061c57600080fd5b506001600160a01b038135169060200135151561172f565b6103126004803603602081101561064a57600080fd5b5035611834565b61066e6004803603602081101561066757600080fd5b5035611ad2565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b610312600480360360808110156106af57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156106ea57600080fd5b8201836020820111156106fc57600080fd5b8035906020019184600183028401116401000000008311171561071e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611b04945050505050565b61038a611b62565b6102ca611b68565b6103126004803603602081101561078557600080fd5b50356001600160a01b0316611b77565b610238600480360360208110156107ab57600080fd5b5035611bef565b6102ca611e96565b6107d7600480360360208110156107d057600080fd5b5035611ea5565b6040518080602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001838152602001828103825289818151815260200191508051906020019060200280838360005b8381101561084457818101518382015260200161082c565b505050509050019850505050505050505060405180910390f35b61021c6004803603604081101561087457600080fd5b506001600160a01b0381358116916020013516611fab565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b820191906000526020600020905b81548152906001019060200180831161091e57829003601f168201915b5050505050905090565b600061095082611fd9565b61098b5760405162461bcd60e51b815260040180806020018281038252602c815260200180612fbf602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109b282611598565b9050806001600160a01b0316836001600160a01b03161415610a055760405162461bcd60e51b81526004018080602001828103825260218152602001806130436021913960400191505060405180910390fd5b806001600160a01b0316610a17611fe6565b6001600160a01b03161480610a385750610a3881610a33611fe6565b611fab565b610a735760405162461bcd60e51b8152600401808060200182810382526038815260200180612f126038913960400191505060405180910390fd5b610a7d8383611fea565b505050565b600083610aca576040805162461bcd60e51b815260206004820152601160248201527014185ddb94dc1858d94e881393d7d39195607a1b604482015290519081900360640190fd5b60005b84811015610b7557600b546001600160a01b03166323b872dd3330898986818110610af457fe5b905060200201356040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b505060019092019150610acd9050565b506040518060c001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602080830186905260408084018890524260608501526080840183905260a0909301829052600c548252600e8152919020825180519192610bfc92849290910190612d94565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050610c3e33600c54612058565b600c549050336001600160a01b03167f07aa6d5d81a739a9fd89bd7a2ca70ba72fc8b94acff7cf84aafcc799cb8e7596600c548787878760405180868152602001806020018481526020018381526020018281038252868682818152602001925060200280828437600083820152604051601f909101601f19169092018290039850909650505050505050a2600c54610cd8906001612186565b600c55949350505050565b6000610cef60026121e0565b905090565b610cfd81611fd9565b610d4a576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b33610d5482611598565b6001600160a01b031614610da6576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e602052604090206004015415610e0a576040805162461bcd60e51b815260206004820152601b60248201527f5061776e53706163653a20414c52454144595f41434345505445440000000000604482015290519081900360640190fd5b60005b6000828152600e6020526040902054811015610edc57600b546000838152600e6020526040902080546001600160a01b03909216916323b872dd91309133919086908110610e5757fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b505060019092019150610e0d9050565b50610ee6816121eb565b60408051828152905133917f9b09baf720c60ad3e68b28ec995e1a86b0dcd3ab5fcd9a2613e0e3d4f6d67d69919081900360200190a250565b610f30610f2a611fe6565b826122b8565b610f6b5760405162461bcd60e51b81526004018080602001828103825260318152602001806130646031913960400191505060405180910390fd5b610a7d83838361235c565b610f7f81611fd9565b610fcc576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b6000818152600e6020526040902060040154611029576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e602052604090206001810154600490910154429161104e9190612186565b10611099576040805162461bcd60e51b815260206004820152601660248201527514185ddb94dc1858d94e881393d517d156141254915160521b604482015290519081900360640190fd5b6000818152600e6020908152604080832060050154808452600f909252909120600101546001600160a01b03163314611111576040805162461bcd60e51b81526020600482015260156024820152742830bbb729b830b1b29d102727aa2fa622a72222a960591b604482015290519081900360640190fd5b60005b6000838152600e60205260409020548110156111e357600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd9130913391908690811061115e57fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156111bf57600080fd5b505af11580156111d3573d6000803e3d6000fd5b5050600190920191506111149050565b5060408051838152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a25050565b6060600061122a610ce3565b1161127c576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611284610ce3565b67ffffffffffffffff8111801561129a57600080fd5b506040519080825280602002602001820160405280156112c4578160200160208202803683370190505b50905060005b81518110156112fb576112dc81611582565b8282815181106112e857fe5b60209081029190910101526001016112ca565b5090565b6001600160a01b038216600090815260016020526040812061132190836124a8565b90505b92915050565b60606000611336610ce3565b11611388576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611390610ce3565b67ffffffffffffffff811180156113a657600080fd5b506040519080825280602002602001820160405280156113d0578160200160208202803683370190505b50905060005b6113de610ce3565b8110156112fb5760006113f082611582565b90506113fa612ddb565b6000828152600e60209081526040918290208251815460e09381028201840190945260c08101848152909391928492849184018282801561145a57602002820191906000526020600020905b815481526020019060010190808311611446575b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505090508060800151600014156114be57818484815181106114b157fe5b6020026020010181815250505b50506001016113d6565b610a7d83838360405180602001604052806000815250611b04565b6000818152600f602052604081206004015481908190819061154c576040805162461bcd60e51b815260206004820152601960248201527f5061776e53706163653a204e4f4e45584953545f4f4646455200000000000000604482015290519081900360640190fd5b505050600091825250600f6020526040902080546001820154600383015460049093015491936001600160a01b03909116929190565b6000806115906002846124b4565b509392505050565b600061132482604051806060016040528060298152602001612f7460299139600291906124d0565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b60006001600160a01b0382166116685760405162461bcd60e51b815260040180806020018281038252602a815260200180612f4a602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600160205260409020611324906121e0565b50600090565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909186565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b611737611fe6565b6001600160a01b0316826001600160a01b0316141561179d576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600560006117aa611fe6565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556117ee611fe6565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b61183d81611fd9565b61188a576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b3361189482611598565b6001600160a01b0316146118e6576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e6020526040902060040154611943576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e60205260409020600181015460049091015442916119689190612186565b10156119b0576040805162461bcd60e51b815260206004820152601260248201527114185ddb94dc1858d94e881156141254915160721b604482015290519081900360640190fd5b6000818152600e6020526040812060050154905b6000838152600e6020526040902054811015611a9357600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd91309133919086908110611a0e57fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015611a6f57600080fd5b505af1158015611a83573d6000803e3d6000fd5b5050600190920191506119c49050565b506040805183815260208101839052815133927fad7daa402ba35c049966c9827828cb62d41be7729ab0b5c816ef79e08c2418c9928290030190a25050565b600e60205260009081526040902060018101546002820154600383015460048401546005909401549293919290919085565b611b15611b0f611fe6565b836122b8565b611b505760405162461bcd60e51b81526004018080602001828103825260318152602001806130646031913960400191505060405180910390fd5b611b5c848484846124e7565b50505050565b6103e881565b600a546001600160a01b031681565b600a546001600160a01b03163314611bcd576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102327a92124a22222a760611b604482015290519081900360640190fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060611bfa82611fd9565b611c355760405162461bcd60e51b815260040180806020018281038252602f815260200180613014602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611cca5780601f10611c9f57610100808354040283529160200191611cca565b820191906000526020600020905b815481529060010190602001808311611cad57829003601f168201915b505060095493945050505060026000196101006001841615020190911604611cf35790506108aa565b805115611dc4576009816040516020018083805460018160011615610100020316600290048015611d5b5780601f10611d39576101008083540402835291820191611d5b565b820191906000526020600020905b815481529060010190602001808311611d47575b5050825160208401908083835b60208310611d875780518252601f199092019160209182019101611d68565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506108aa565b6009611dcf84612539565b6040516020018083805460018160011615610100020316600290048015611e2d5780601f10611e0b576101008083540402835291820191611e2d565b820191906000526020600020905b815481529060010190602001808311611e19575b5050825160208401908083835b60208310611e595780518252601f199092019160209182019101611e3a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b600b546001600160a01b031681565b6060600080600080600080611eb988611fd9565b611f06576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b611f0f88611598565b6000898152600e60209081526040918290208054835181840281018401909452808452939950919290830182828015611f6757602002820191906000526020600020905b815481526020019060010190808311611f53575b50505060009a8b525050600e602052604090982060028101546001820154600383015460048401546005909401549b9c999b929a5090989097509195509350915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000611324600283612614565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061201f82611598565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166120b3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6120bc81611fd9565b1561210e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61211a60008383610a7d565b6001600160a01b038216600090815260016020526040902061213c9082612620565b506121496002828461262c565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082820183811015611321576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061132482612642565b60006121f682611598565b905061220481600084610a7d565b61220f600083611fea565b600082815260086020526040902054600260001961010060018416150201909116041561224d57600082815260086020526040812061224d91612e11565b6001600160a01b038116600090815260016020526040902061226f9083612646565b5061227b600283612652565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006122c382611fd9565b6122fe5760405162461bcd60e51b815260040180806020018281038252602c815260200180612ee6602c913960400191505060405180910390fd5b600061230983611598565b9050806001600160a01b0316846001600160a01b031614806123445750836001600160a01b031661233984610945565b6001600160a01b0316145b8061235457506123548185611fab565b949350505050565b826001600160a01b031661236f82611598565b6001600160a01b0316146123b45760405162461bcd60e51b8152600401808060200182810382526029815260200180612feb6029913960400191505060405180910390fd5b6001600160a01b0382166123f95760405162461bcd60e51b8152600401808060200182810382526024815260200180612ec26024913960400191505060405180910390fd5b612404838383610a7d565b61240f600082611fea565b6001600160a01b03831660009081526001602052604090206124319082612646565b506001600160a01b03821660009081526001602052604090206124549082612620565b506124616002828461262c565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611321838361265e565b60008080806124c386866126c2565b9097909650945050505050565b60006124dd84848461273d565b90505b9392505050565b6124f284848461235c565b6124fe84848484612807565b611b5c5760405162461bcd60e51b8152600401808060200182810382526032815260200180612e906032913960400191505060405180910390fd5b60608161255e57506040805180820190915260018152600360fc1b60208201526108aa565b8160005b811561257657600101600a82049150612562565b60608167ffffffffffffffff8111801561258f57600080fd5b506040519080825280601f01601f1916602001820160405280156125ba576020820181803683370190505b50859350905060001982015b831561260b57600a840660300160f81b828280600190039350815181106125e957fe5b60200101906001600160f81b031916908160001a905350600a840493506125c6565b50949350505050565b6000611321838361296f565b60006113218383612987565b60006124dd84846001600160a01b0385166129d1565b5490565b60006113218383612a68565b60006113218383612b2e565b815460009082106126a05760405162461bcd60e51b8152600401808060200182810382526022815260200180612e6e6022913960400191505060405180910390fd5b8260000182815481106126af57fe5b9060005260206000200154905092915050565b8154600090819083106127065760405162461bcd60e51b8152600401808060200182810382526022815260200180612f9d6022913960400191505060405180910390fd5b600084600001848154811061271757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816127d85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561279d578181015183820152602001612785565b50505050905090810190601f1680156127ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106127eb57fe5b9060005260206000209060020201600101549150509392505050565b600061281b846001600160a01b0316612c02565b61282757506001612354565b6060612935630a85bd0160e11b61283c611fe6565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128a357818101518382015260200161288b565b50505050905090810190601f1680156128d05780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612e90603291396001600160a01b0388169190612c08565b9050600081806020019051602081101561294e57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b6000612993838361296f565b6129c957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611324565b506000611324565b600082815260018401602052604081205480612a365750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556124e0565b82856000016001830381548110612a4957fe5b90600052602060002090600202016001018190555060009150506124e0565b60008181526001830160205260408120548015612b245783546000198083019190810190600090879083908110612a9b57fe5b9060005260206000200154905080876000018481548110612ab857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080612ae857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611324565b6000915050611324565b60008181526001830160205260408120548015612b245783546000198083019190810190600090879083908110612b6157fe5b9060005260206000209060020201905080876000018481548110612b8157fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080612bc057fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506113249350505050565b3b151590565b60606124dd848460008585612c1c85612c02565b612c6d576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612cac5780518252601f199092019160209182019101612c8d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612d0e576040519150601f19603f3d011682016040523d82523d6000602084013e612d13565b606091505b5091509150612d23828286612d2e565b979650505050505050565b60608315612d3d5750816124e0565b825115612d4d5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561279d578181015183820152602001612785565b828054828255906000526020600020908101928215612dcf579160200282015b82811115612dcf578251825591602001919060010190612db4565b506112fb929150612e58565b6040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b50805460018160011615610100020316600290046000825580601f10612e375750612e55565b601f016020900490600052602060002090810190612e559190612e58565b50565b5b808211156112fb5760008155600101612e5956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212207061eb5fe0aeb2b1eed4d4895e72617fea6a7af2d6d0579b00f9a50e3c2466ef64736f6c63430007050033a26469706673582212200d765551e4388dadd0d0f5b1bb932f766ef7e474ae13c59f221383d8e06ae27364736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806389cecd311161005b57806389cecd31146100f0578063a2e74af614610116578063a8cb47131461013e578063f46901ed1461016457610088565b8063017e7e581461008d578063094b7415146100b157806349c97251146100b9578063872b8580146100d3575b600080fd5b61009561018a565b604080516001600160a01b039092168252519081900360200190f35b610095610199565b6100c16101a8565b60408051918252519081900360200190f35b610095600480360360208110156100e957600080fd5b50356101ae565b6100956004803603602081101561010657600080fd5b50356001600160a01b03166101d8565b61013c6004803603602081101561012c57600080fd5b50356001600160a01b0316610420565b005b6100956004803603602081101561015457600080fd5b50356001600160a01b031661049a565b61013c6004803603602081101561017a57600080fd5b50356001600160a01b03166104b5565b6000546001600160a01b031681565b6001546001600160a01b031681565b60035490565b600381815481106101be57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b038216610235576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a205a45524f5f4144445245535300000000000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526002602052604090205416156102a2576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a2053504143455f45584953545300000000000000604482015290519081900360640190fd5b6060604051806020016102b49061052f565b6020820181038252601f19601f82011660405250905060008360405160200180826001600160a01b031660601b8152601401915050604051602081830303815290604052805190602001209050808251602084016000f59250826001600160a01b031663c4d66de8856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050506001600160a01b0380861660008181526002602090815260408083208054958a166001600160a01b0319968716811790915560038054600181018255948190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90940180549096168117909555915482519485529084015280519193507f9d92b1372c0fff8e3ee90bd3de318492ab9f2fa5925f75cfa292e7a2b55515e1928290030190a25050919050565b6001546001600160a01b03163314610478576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b0316331461050d576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6132eb8061053d8339019056fe608060405260016011553480156200001657600080fd5b5060408051808201825260098152685061776e537061636560b81b60208083019190915282518084019093526003835262282ba760e91b9083015290620000646301ffc9a760e01b620000e0565b81516200007990600690602085019062000165565b5080516200008f90600790602084019062000165565b50620000a26380ac58cd60e01b620000e0565b620000b4635b5e139f60e01b620000e0565b620000c663780e9d6360e01b620000e0565b5050600a80546001600160a01b0319163317905562000211565b6001600160e01b0319808216141562000140576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200019d5760008555620001e8565b82601f10620001b857805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e8578251825591602001919060010190620001cb565b50620001f6929150620001fa565b5090565b5b80821115620001f65760008155600101620001fb565b6130ca80620002216000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636c0360eb1161010f578063b88d4fde116100a2578063c87b56dd11610071578063c87b56dd14610795578063d06fcba8146107b2578063d09ef241146107ba578063e985e9c51461085e576101f0565b8063b88d4fde14610699578063ba9a7a561461075f578063c45a015514610767578063c4d66de81461076f576101f0565b806395d89b41116100de57806395d89b41146105fe578063a22cb46514610606578063a846c2fd14610634578063a85c38ef14610651576101f0565b80636c0360eb1461055b57806370a0823114610563578063761610fc146105895780638a72ea6a146105a6576101f0565b80632e1a7d4d1161018757806342842e0e1161015657806342842e0e146104a05780634579268a146104d65780634f6ccce7146105215780636352211e1461053e576101f0565b80632e1a7d4d146103f75780632e2dc43e146104145780632f745c591461046c578063407384e914610498576101f0565b806313789680116101c3578063137896801461031457806318160ddd1461039c57806322f37ae0146103a457806323b872dd146103c1576101f0565b806301ffc9a7146101f557806306fdde0314610230578063081812fc146102ad578063095ea7b3146102e6575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b03191661088c565b604080519115158252519081900360200190f35b6102386108af565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360208110156102c357600080fd5b5035610945565b604080516001600160a01b039092168252519081900360200190f35b610312600480360360408110156102fc57600080fd5b506001600160a01b0381351690602001356109a7565b005b61038a6004803603606081101561032a57600080fd5b81019060208101813564010000000081111561034557600080fd5b82018360208201111561035757600080fd5b8035906020019184602083028401116401000000008311171561037957600080fd5b919350915080359060200135610a82565b60408051918252519081900360200190f35b61038a610ce3565b610312600480360360208110156103ba57600080fd5b5035610cf4565b610312600480360360608110156103d757600080fd5b506001600160a01b03813581169160208101359091169060400135610f1f565b6103126004803603602081101561040d57600080fd5b5035610f76565b61041c61121e565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610458578181015183820152602001610440565b505050509050019250505060405180910390f35b61038a6004803603604081101561048257600080fd5b506001600160a01b0381351690602001356112ff565b61041c61132a565b610312600480360360608110156104b657600080fd5b506001600160a01b038135811691602081013590911690604001356114c8565b6104f3600480360360208110156104ec57600080fd5b50356114e3565b604080519485526001600160a01b039093166020850152838301919091526060830152519081900360800190f35b61038a6004803603602081101561053757600080fd5b5035611582565b6102ca6004803603602081101561055457600080fd5b5035611598565b6102386115c0565b61038a6004803603602081101561057957600080fd5b50356001600160a01b0316611621565b61038a6004803603602081101561059f57600080fd5b5035611689565b6105c3600480360360208110156105bc57600080fd5b503561168f565b604080519687526001600160a01b039095166020870152858501939093526060850191909152608084015260a0830152519081900360c00190f35b6102386116ce565b6103126004803603604081101561061c57600080fd5b506001600160a01b038135169060200135151561172f565b6103126004803603602081101561064a57600080fd5b5035611834565b61066e6004803603602081101561066757600080fd5b5035611ad2565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b610312600480360360808110156106af57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156106ea57600080fd5b8201836020820111156106fc57600080fd5b8035906020019184600183028401116401000000008311171561071e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611b04945050505050565b61038a611b62565b6102ca611b68565b6103126004803603602081101561078557600080fd5b50356001600160a01b0316611b77565b610238600480360360208110156107ab57600080fd5b5035611bef565b6102ca611e96565b6107d7600480360360208110156107d057600080fd5b5035611ea5565b6040518080602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001838152602001828103825289818151815260200191508051906020019060200280838360005b8381101561084457818101518382015260200161082c565b505050509050019850505050505050505060405180910390f35b61021c6004803603604081101561087457600080fd5b506001600160a01b0381358116916020013516611fab565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b820191906000526020600020905b81548152906001019060200180831161091e57829003601f168201915b5050505050905090565b600061095082611fd9565b61098b5760405162461bcd60e51b815260040180806020018281038252602c815260200180612fbf602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109b282611598565b9050806001600160a01b0316836001600160a01b03161415610a055760405162461bcd60e51b81526004018080602001828103825260218152602001806130436021913960400191505060405180910390fd5b806001600160a01b0316610a17611fe6565b6001600160a01b03161480610a385750610a3881610a33611fe6565b611fab565b610a735760405162461bcd60e51b8152600401808060200182810382526038815260200180612f126038913960400191505060405180910390fd5b610a7d8383611fea565b505050565b600083610aca576040805162461bcd60e51b815260206004820152601160248201527014185ddb94dc1858d94e881393d7d39195607a1b604482015290519081900360640190fd5b60005b84811015610b7557600b546001600160a01b03166323b872dd3330898986818110610af457fe5b905060200201356040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b505060019092019150610acd9050565b506040518060c001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602080830186905260408084018890524260608501526080840183905260a0909301829052600c548252600e8152919020825180519192610bfc92849290910190612d94565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050610c3e33600c54612058565b600c549050336001600160a01b03167f07aa6d5d81a739a9fd89bd7a2ca70ba72fc8b94acff7cf84aafcc799cb8e7596600c548787878760405180868152602001806020018481526020018381526020018281038252868682818152602001925060200280828437600083820152604051601f909101601f19169092018290039850909650505050505050a2600c54610cd8906001612186565b600c55949350505050565b6000610cef60026121e0565b905090565b610cfd81611fd9565b610d4a576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b33610d5482611598565b6001600160a01b031614610da6576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e602052604090206004015415610e0a576040805162461bcd60e51b815260206004820152601b60248201527f5061776e53706163653a20414c52454144595f41434345505445440000000000604482015290519081900360640190fd5b60005b6000828152600e6020526040902054811015610edc57600b546000838152600e6020526040902080546001600160a01b03909216916323b872dd91309133919086908110610e5757fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b505060019092019150610e0d9050565b50610ee6816121eb565b60408051828152905133917f9b09baf720c60ad3e68b28ec995e1a86b0dcd3ab5fcd9a2613e0e3d4f6d67d69919081900360200190a250565b610f30610f2a611fe6565b826122b8565b610f6b5760405162461bcd60e51b81526004018080602001828103825260318152602001806130646031913960400191505060405180910390fd5b610a7d83838361235c565b610f7f81611fd9565b610fcc576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b6000818152600e6020526040902060040154611029576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e602052604090206001810154600490910154429161104e9190612186565b10611099576040805162461bcd60e51b815260206004820152601660248201527514185ddb94dc1858d94e881393d517d156141254915160521b604482015290519081900360640190fd5b6000818152600e6020908152604080832060050154808452600f909252909120600101546001600160a01b03163314611111576040805162461bcd60e51b81526020600482015260156024820152742830bbb729b830b1b29d102727aa2fa622a72222a960591b604482015290519081900360640190fd5b60005b6000838152600e60205260409020548110156111e357600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd9130913391908690811061115e57fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156111bf57600080fd5b505af11580156111d3573d6000803e3d6000fd5b5050600190920191506111149050565b5060408051838152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a25050565b6060600061122a610ce3565b1161127c576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611284610ce3565b67ffffffffffffffff8111801561129a57600080fd5b506040519080825280602002602001820160405280156112c4578160200160208202803683370190505b50905060005b81518110156112fb576112dc81611582565b8282815181106112e857fe5b60209081029190910101526001016112ca565b5090565b6001600160a01b038216600090815260016020526040812061132190836124a8565b90505b92915050565b60606000611336610ce3565b11611388576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611390610ce3565b67ffffffffffffffff811180156113a657600080fd5b506040519080825280602002602001820160405280156113d0578160200160208202803683370190505b50905060005b6113de610ce3565b8110156112fb5760006113f082611582565b90506113fa612ddb565b6000828152600e60209081526040918290208251815460e09381028201840190945260c08101848152909391928492849184018282801561145a57602002820191906000526020600020905b815481526020019060010190808311611446575b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505090508060800151600014156114be57818484815181106114b157fe5b6020026020010181815250505b50506001016113d6565b610a7d83838360405180602001604052806000815250611b04565b6000818152600f602052604081206004015481908190819061154c576040805162461bcd60e51b815260206004820152601960248201527f5061776e53706163653a204e4f4e45584953545f4f4646455200000000000000604482015290519081900360640190fd5b505050600091825250600f6020526040902080546001820154600383015460049093015491936001600160a01b03909116929190565b6000806115906002846124b4565b509392505050565b600061132482604051806060016040528060298152602001612f7460299139600291906124d0565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b60006001600160a01b0382166116685760405162461bcd60e51b815260040180806020018281038252602a815260200180612f4a602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600160205260409020611324906121e0565b50600090565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909186565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561093b5780601f106109105761010080835404028352916020019161093b565b611737611fe6565b6001600160a01b0316826001600160a01b0316141561179d576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600560006117aa611fe6565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556117ee611fe6565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b61183d81611fd9565b61188a576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b3361189482611598565b6001600160a01b0316146118e6576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e6020526040902060040154611943576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e60205260409020600181015460049091015442916119689190612186565b10156119b0576040805162461bcd60e51b815260206004820152601260248201527114185ddb94dc1858d94e881156141254915160721b604482015290519081900360640190fd5b6000818152600e6020526040812060050154905b6000838152600e6020526040902054811015611a9357600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd91309133919086908110611a0e57fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015611a6f57600080fd5b505af1158015611a83573d6000803e3d6000fd5b5050600190920191506119c49050565b506040805183815260208101839052815133927fad7daa402ba35c049966c9827828cb62d41be7729ab0b5c816ef79e08c2418c9928290030190a25050565b600e60205260009081526040902060018101546002820154600383015460048401546005909401549293919290919085565b611b15611b0f611fe6565b836122b8565b611b505760405162461bcd60e51b81526004018080602001828103825260318152602001806130646031913960400191505060405180910390fd5b611b5c848484846124e7565b50505050565b6103e881565b600a546001600160a01b031681565b600a546001600160a01b03163314611bcd576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102327a92124a22222a760611b604482015290519081900360640190fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060611bfa82611fd9565b611c355760405162461bcd60e51b815260040180806020018281038252602f815260200180613014602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611cca5780601f10611c9f57610100808354040283529160200191611cca565b820191906000526020600020905b815481529060010190602001808311611cad57829003601f168201915b505060095493945050505060026000196101006001841615020190911604611cf35790506108aa565b805115611dc4576009816040516020018083805460018160011615610100020316600290048015611d5b5780601f10611d39576101008083540402835291820191611d5b565b820191906000526020600020905b815481529060010190602001808311611d47575b5050825160208401908083835b60208310611d875780518252601f199092019160209182019101611d68565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506108aa565b6009611dcf84612539565b6040516020018083805460018160011615610100020316600290048015611e2d5780601f10611e0b576101008083540402835291820191611e2d565b820191906000526020600020905b815481529060010190602001808311611e19575b5050825160208401908083835b60208310611e595780518252601f199092019160209182019101611e3a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b600b546001600160a01b031681565b6060600080600080600080611eb988611fd9565b611f06576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b611f0f88611598565b6000898152600e60209081526040918290208054835181840281018401909452808452939950919290830182828015611f6757602002820191906000526020600020905b815481526020019060010190808311611f53575b50505060009a8b525050600e602052604090982060028101546001820154600383015460048401546005909401549b9c999b929a5090989097509195509350915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000611324600283612614565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061201f82611598565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166120b3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6120bc81611fd9565b1561210e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61211a60008383610a7d565b6001600160a01b038216600090815260016020526040902061213c9082612620565b506121496002828461262c565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082820183811015611321576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061132482612642565b60006121f682611598565b905061220481600084610a7d565b61220f600083611fea565b600082815260086020526040902054600260001961010060018416150201909116041561224d57600082815260086020526040812061224d91612e11565b6001600160a01b038116600090815260016020526040902061226f9083612646565b5061227b600283612652565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006122c382611fd9565b6122fe5760405162461bcd60e51b815260040180806020018281038252602c815260200180612ee6602c913960400191505060405180910390fd5b600061230983611598565b9050806001600160a01b0316846001600160a01b031614806123445750836001600160a01b031661233984610945565b6001600160a01b0316145b8061235457506123548185611fab565b949350505050565b826001600160a01b031661236f82611598565b6001600160a01b0316146123b45760405162461bcd60e51b8152600401808060200182810382526029815260200180612feb6029913960400191505060405180910390fd5b6001600160a01b0382166123f95760405162461bcd60e51b8152600401808060200182810382526024815260200180612ec26024913960400191505060405180910390fd5b612404838383610a7d565b61240f600082611fea565b6001600160a01b03831660009081526001602052604090206124319082612646565b506001600160a01b03821660009081526001602052604090206124549082612620565b506124616002828461262c565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611321838361265e565b60008080806124c386866126c2565b9097909650945050505050565b60006124dd84848461273d565b90505b9392505050565b6124f284848461235c565b6124fe84848484612807565b611b5c5760405162461bcd60e51b8152600401808060200182810382526032815260200180612e906032913960400191505060405180910390fd5b60608161255e57506040805180820190915260018152600360fc1b60208201526108aa565b8160005b811561257657600101600a82049150612562565b60608167ffffffffffffffff8111801561258f57600080fd5b506040519080825280601f01601f1916602001820160405280156125ba576020820181803683370190505b50859350905060001982015b831561260b57600a840660300160f81b828280600190039350815181106125e957fe5b60200101906001600160f81b031916908160001a905350600a840493506125c6565b50949350505050565b6000611321838361296f565b60006113218383612987565b60006124dd84846001600160a01b0385166129d1565b5490565b60006113218383612a68565b60006113218383612b2e565b815460009082106126a05760405162461bcd60e51b8152600401808060200182810382526022815260200180612e6e6022913960400191505060405180910390fd5b8260000182815481106126af57fe5b9060005260206000200154905092915050565b8154600090819083106127065760405162461bcd60e51b8152600401808060200182810382526022815260200180612f9d6022913960400191505060405180910390fd5b600084600001848154811061271757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816127d85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561279d578181015183820152602001612785565b50505050905090810190601f1680156127ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106127eb57fe5b9060005260206000209060020201600101549150509392505050565b600061281b846001600160a01b0316612c02565b61282757506001612354565b6060612935630a85bd0160e11b61283c611fe6565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128a357818101518382015260200161288b565b50505050905090810190601f1680156128d05780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612e90603291396001600160a01b0388169190612c08565b9050600081806020019051602081101561294e57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b6000612993838361296f565b6129c957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611324565b506000611324565b600082815260018401602052604081205480612a365750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556124e0565b82856000016001830381548110612a4957fe5b90600052602060002090600202016001018190555060009150506124e0565b60008181526001830160205260408120548015612b245783546000198083019190810190600090879083908110612a9b57fe5b9060005260206000200154905080876000018481548110612ab857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080612ae857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611324565b6000915050611324565b60008181526001830160205260408120548015612b245783546000198083019190810190600090879083908110612b6157fe5b9060005260206000209060020201905080876000018481548110612b8157fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080612bc057fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506113249350505050565b3b151590565b60606124dd848460008585612c1c85612c02565b612c6d576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612cac5780518252601f199092019160209182019101612c8d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612d0e576040519150601f19603f3d011682016040523d82523d6000602084013e612d13565b606091505b5091509150612d23828286612d2e565b979650505050505050565b60608315612d3d5750816124e0565b825115612d4d5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561279d578181015183820152602001612785565b828054828255906000526020600020908101928215612dcf579160200282015b82811115612dcf578251825591602001919060010190612db4565b506112fb929150612e58565b6040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b50805460018160011615610100020316600290046000825580601f10612e375750612e55565b601f016020900490600052602060002090810190612e559190612e58565b50565b5b808211156112fb5760008155600101612e5956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212207061eb5fe0aeb2b1eed4d4895e72617fea6a7af2d6d0579b00f9a50e3c2466ef64736f6c63430007050033a26469706673582212200d765551e4388dadd0d0f5b1bb932f766ef7e474ae13c59f221383d8e06ae27364736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "145:1501:0:-:0;;;453:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;453:79:0;498:11;:26;;-1:-1:-1;;;;;;498:26:0;-1:-1:-1;;;;;498:26:0;;;;;;;;;145:1501;;;-1:-1:-1;145:1501:0;;",
  "deployedSourceMap": "145:1501:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:29;;;:::i;:::-;;;;-1:-1:-1;;;;;189:29:0;;;;;;;;;;;;;;225:35;;;:::i;540:110::-;;;:::i;:::-;;;;;;;;;;;;;;;;328:35;;;;;;;;;;;;;;;;-1:-1:-1;328:35:0;;:::i;658:633::-;;;;;;;;;;;;;;;;-1:-1:-1;658:633:0;-1:-1:-1;;;;;658:633:0;;:::i;1463:180::-;;;;;;;;;;;;;;;;-1:-1:-1;1463:180:0;-1:-1:-1;;;;;1463:180:0;;:::i;:::-;;269:52;;;;;;;;;;;;;;;;-1:-1:-1;269:52:0;-1:-1:-1;;;;;269:52:0;;:::i;1299:156::-;;;;;;;;;;;;;;;;-1:-1:-1;1299:156:0;-1:-1:-1;;;;;1299:156:0;;:::i;189:29::-;;;-1:-1:-1;;;;;189:29:0;;:::o;225:35::-;;;-1:-1:-1;;;;;225:35:0;;:::o;540:110::-;626:9;:16;540:110;:::o;328:35::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;328:35:0;;-1:-1:-1;328:35:0;:::o;658:633::-;721:13;-1:-1:-1;;;;;755:19:0;;747:57;;;;;-1:-1:-1;;;747:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;823:15:0;;;850:1;823:15;;;:8;:15;;;;;;;:29;815:67;;;;;-1:-1:-1;;;815:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:21;917:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;893:52;;956:12;998:5;981:23;;;;;;-1:-1:-1;;;;;981:23:0;;;;;;;;;;;;;;;;;;;;;;971:34;;;;;;956:49;;1096:4;1085:8;1079:15;1074:2;1064:8;1060:17;1057:1;1049:52;1040:61;;1133:5;-1:-1:-1;;;;;1122:28:0;;1151:5;1122:35;;;;;;;;;;;;;-1:-1:-1;;;;;1122:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1168:15:0;;;;;;;:8;:15;;;;;;;;:23;;;;;-1:-1:-1;;;;;;1168:23:0;;;;;;;;1202:9;:21;;1168:23;1202:21;;;;;;;;;;;;;;;;;;;;;;1266:16;;1239:44;;;;;;;;;;;1168:15;;-1:-1:-1;1239:44:0;;;;;;;;658:633;;;;;:::o;1463:180::-;1560:11;;-1:-1:-1;;;;;1560:11:0;1546:10;:25;1538:60;;;;;-1:-1:-1;;;1538:60:0;;;;;;;;;;;;-1:-1:-1;;;1538:60:0;;;;;;;;;;;;;;;1609:11;:26;;-1:-1:-1;;;;;;1609:26:0;-1:-1:-1;;;;;1609:26:0;;;;;;;;;;1463:180::o;269:52::-;;;;;;;;;;;;-1:-1:-1;;;;;269:52:0;;:::o;1299:156::-;1384:11;;-1:-1:-1;;;;;1384:11:0;1370:10;:25;1362:60;;;;;-1:-1:-1;;;1362:60:0;;;;;;;;;;;;-1:-1:-1;;;1362:60:0;;;;;;;;;;;;;;;1433:5;:14;;-1:-1:-1;;;;;;1433:14:0;-1:-1:-1;;;;;1433:14:0;;;;;;;;;;1299:156::o;-1:-1:-1:-;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport './interfaces/IPawnFactory.sol';\r\nimport './PawnSpace.sol';\r\n\r\ncontract PawnFactory is IPawnFactory {\r\n    address public override feeTo;\r\n    address public override feeToSetter;\r\n\r\n    mapping(address => address) public override getSpace;\r\n    address[] public override allSpaces;\r\n\r\n    event SpaceCreated(address indexed token, address space, uint256 length);\r\n\r\n    constructor(address _feeToSetter) {\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n\r\n    function allSpacesLength() external view override returns (uint256) {\r\n        return allSpaces.length;\r\n    }\r\n\r\n    function createSpace(address token) external override returns (address space) {\r\n        require(token != address(0), 'PawnFactory: ZERO_ADDRESS');\r\n        require(getSpace[token] == address(0), 'PawnFactory: SPACE_EXISTS');\r\n        bytes memory bytecode = type(PawnSpace).creationCode;\r\n        bytes32 salt = keccak256(abi.encodePacked(token));\r\n        assembly {\r\n            space := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n        }\r\n        IPawnSpace(space).initialize(token);\r\n        getSpace[token] = space;\r\n        allSpaces.push(space);\r\n        emit SpaceCreated(token, space, allSpaces.length);\r\n    }\r\n\r\n    function setFeeTo(address _feeTo) external override {\r\n        require(msg.sender == feeToSetter, 'PawnFactory: FORBIDDEN');\r\n        feeTo = _feeTo;\r\n    }\r\n\r\n    function setFeeToSetter(address _feeToSetter) external override {\r\n        require(msg.sender == feeToSetter, 'PawnFactory: FORBIDDEN');\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnFactory.sol",
    "exportedSymbols": {
      "Address": [
        3843
      ],
      "Context": [
        1630
      ],
      "ERC165": [
        1687
      ],
      "ERC721": [
        3407
      ],
      "EnumerableMap": [
        4348
      ],
      "EnumerableSet": [
        4828
      ],
      "IERC165": [
        1699
      ],
      "IERC20": [
        2476
      ],
      "IERC721": [
        3523
      ],
      "IERC721Enumerable": [
        3554
      ],
      "IERC721Metadata": [
        3581
      ],
      "IERC721Receiver": [
        3599
      ],
      "IPawnFactory": [
        1016
      ],
      "IPawnSpace": [
        1156
      ],
      "PawnFactory": [
        161
      ],
      "PawnSpace": [
        959
      ],
      "SafeMath": [
        1895
      ],
      "Strings": [
        4915
      ]
    },
    "id": 162,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:31:0"
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/interfaces/IPawnFactory.sol",
        "file": "./interfaces/IPawnFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 1017,
        "src": "75:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnSpace.sol",
        "file": "./PawnSpace.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 960,
        "src": "116:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IPawnFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1016,
              "src": "169:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPawnFactory_$1016",
                "typeString": "contract IPawnFactory"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "169:12:0"
          }
        ],
        "contractDependencies": [
          959,
          1016
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 161,
        "linearizedBaseContracts": [
          161,
          1016
        ],
        "name": "PawnFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              974
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "204:8:0"
            },
            "scope": 161,
            "src": "189:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              979
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 11,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "240:8:0"
            },
            "scope": 161,
            "src": "225:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              986
            ],
            "constant": false,
            "functionSelector": "a8cb4713",
            "id": 16,
            "mutability": "mutable",
            "name": "getSpace",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 15,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "304:8:0"
            },
            "scope": 161,
            "src": "269:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "277:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "269:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "288:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              993
            ],
            "constant": false,
            "functionSelector": "872b8580",
            "id": 20,
            "mutability": "mutable",
            "name": "allSpaces",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 19,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "345:8:0"
            },
            "scope": 161,
            "src": "328:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "328:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "SpaceCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "391:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "414:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "length",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "429:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:54:0"
            },
            "src": "372:73:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "487:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "498:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "512:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "498:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "498:26:0"
                }
              ]
            },
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "465:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:22:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:0"
            },
            "scope": 161,
            "src": "453:79:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "608:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44,
                      "name": "allSpaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "626:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "626:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "619:23:0"
                }
              ]
            },
            "functionSelector": "49c97251",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allSpacesLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "581:8:0"
            },
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "599:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:9:0"
            },
            "scope": 161,
            "src": "540:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1005
            ],
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "736:555:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "755:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "772:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "764:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "764:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "764:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "755:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a205a45524f5f41444452455353",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        },
                        "value": "PawnFactory: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "747:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "747:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "getSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "823:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 69,
                          "indexExpression": {
                            "id": 68,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "832:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "823:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "850:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "842:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "823:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a2053504143455f455849535453",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        },
                        "value": "PawnFactory: SPACE_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "815:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "815:67:0"
                },
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "893:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "893:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 81,
                          "name": "PawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "922:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$959_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$959_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        ],
                        "id": 80,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "917:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "917:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PawnSpace_$959",
                        "typeString": "type(contract PawnSpace)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "917:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "893:52:0"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "956:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "998:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "981:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "981:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 87,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "971:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "956:49:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1025:87:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1040:61:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1057:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1074:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1060:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1060:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1085:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1079:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1079:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1096:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1049:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1049:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "space",
                            "nodeType": "YulIdentifier",
                            "src": "1040:5:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 79,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1064:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 79,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1085:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 86,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1096:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 54,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1040:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 94,
                  "nodeType": "InlineAssembly",
                  "src": "1016:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1151:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 96,
                            "name": "space",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1133:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 95,
                          "name": "IPawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "1122:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPawnSpace_$1156_$",
                            "typeString": "type(contract IPawnSpace)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1122:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPawnSpace_$1156",
                          "typeString": "contract IPawnSpace"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1112,
                      "src": "1122:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:35:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "getSpace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1168:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 104,
                      "indexExpression": {
                        "id": 103,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1177:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1168:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1168:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1217:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "allSpaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1202:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1202:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 115,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1252:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 116,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1259:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 117,
                          "name": "allSpaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1266:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1266:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "SpaceCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1239:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "EmitStatement",
                  "src": "1234:49:0"
                }
              ]
            },
            "functionSelector": "89cecd31",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSpace",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 52,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "703:8:0"
            },
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "679:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:15:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "721:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:15:0"
            },
            "scope": 161,
            "src": "658:633:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1010
            ],
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1351:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1370:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1370:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 131,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1384:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1370:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:60:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1433:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1441:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1433:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1342:8:0"
            },
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1317:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:16:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:0"
            },
            "scope": 161,
            "src": "1299:156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1015
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1527:116:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1546:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1546:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 150,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1560:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1546:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:60:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1609:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 156,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1623:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1609:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 145,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1518:8:0"
            },
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1487:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:22:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:0"
            },
            "scope": 161,
            "src": "1463:180:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 162,
        "src": "145:1501:0"
      }
    ],
    "src": "40:1608:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnFactory.sol",
    "exportedSymbols": {
      "Address": [
        3843
      ],
      "Context": [
        1630
      ],
      "ERC165": [
        1687
      ],
      "ERC721": [
        3407
      ],
      "EnumerableMap": [
        4348
      ],
      "EnumerableSet": [
        4828
      ],
      "IERC165": [
        1699
      ],
      "IERC20": [
        2476
      ],
      "IERC721": [
        3523
      ],
      "IERC721Enumerable": [
        3554
      ],
      "IERC721Metadata": [
        3581
      ],
      "IERC721Receiver": [
        3599
      ],
      "IPawnFactory": [
        1016
      ],
      "IPawnSpace": [
        1156
      ],
      "PawnFactory": [
        161
      ],
      "PawnSpace": [
        959
      ],
      "SafeMath": [
        1895
      ],
      "Strings": [
        4915
      ]
    },
    "id": 162,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:31:0"
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/interfaces/IPawnFactory.sol",
        "file": "./interfaces/IPawnFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 1017,
        "src": "75:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/sonic/Desktop/Projects/pawnspace-contracts/contracts/PawnSpace.sol",
        "file": "./PawnSpace.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 960,
        "src": "116:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IPawnFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1016,
              "src": "169:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPawnFactory_$1016",
                "typeString": "contract IPawnFactory"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "169:12:0"
          }
        ],
        "contractDependencies": [
          959,
          1016
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 161,
        "linearizedBaseContracts": [
          161,
          1016
        ],
        "name": "PawnFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              974
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "204:8:0"
            },
            "scope": 161,
            "src": "189:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              979
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 11,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "240:8:0"
            },
            "scope": 161,
            "src": "225:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "225:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              986
            ],
            "constant": false,
            "functionSelector": "a8cb4713",
            "id": 16,
            "mutability": "mutable",
            "name": "getSpace",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 15,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "304:8:0"
            },
            "scope": 161,
            "src": "269:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "277:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "269:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "288:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              993
            ],
            "constant": false,
            "functionSelector": "872b8580",
            "id": 20,
            "mutability": "mutable",
            "name": "allSpaces",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 19,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "345:8:0"
            },
            "scope": 161,
            "src": "328:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "328:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "SpaceCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "391:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "414:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "length",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "429:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:54:0"
            },
            "src": "372:73:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "487:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "498:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 34,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "512:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "498:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "498:26:0"
                }
              ]
            },
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "465:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:22:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:0"
            },
            "scope": 161,
            "src": "453:79:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "608:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44,
                      "name": "allSpaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "626:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "626:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "619:23:0"
                }
              ]
            },
            "functionSelector": "49c97251",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allSpacesLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 40,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "581:8:0"
            },
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "599:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:9:0"
            },
            "scope": 161,
            "src": "540:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1005
            ],
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "736:555:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "755:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "772:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "764:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "764:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "764:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "755:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a205a45524f5f41444452455353",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        },
                        "value": "PawnFactory: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "747:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "747:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "getSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "823:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 69,
                          "indexExpression": {
                            "id": 68,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "832:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "823:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "850:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "842:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "823:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a2053504143455f455849535453",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        },
                        "value": "PawnFactory: SPACE_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "815:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "815:67:0"
                },
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "893:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "893:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 81,
                          "name": "PawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "922:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$959_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$959_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        ],
                        "id": 80,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "917:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "917:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PawnSpace_$959",
                        "typeString": "type(contract PawnSpace)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "917:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "893:52:0"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "956:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "998:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "981:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "981:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 87,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "971:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "956:49:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1025:87:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1040:61:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1057:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1074:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1060:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1060:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1085:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1079:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1079:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1096:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1049:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1049:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "space",
                            "nodeType": "YulIdentifier",
                            "src": "1040:5:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 79,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1064:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 79,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1085:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 86,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1096:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 54,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1040:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 94,
                  "nodeType": "InlineAssembly",
                  "src": "1016:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1151:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 96,
                            "name": "space",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1133:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 95,
                          "name": "IPawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "1122:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPawnSpace_$1156_$",
                            "typeString": "type(contract IPawnSpace)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1122:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPawnSpace_$1156",
                          "typeString": "contract IPawnSpace"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1112,
                      "src": "1122:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:35:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "getSpace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1168:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 104,
                      "indexExpression": {
                        "id": 103,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1177:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1168:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1168:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1217:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "allSpaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1202:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1202:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 115,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1252:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 116,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1259:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 117,
                          "name": "allSpaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1266:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1266:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "SpaceCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1239:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "EmitStatement",
                  "src": "1234:49:0"
                }
              ]
            },
            "functionSelector": "89cecd31",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSpace",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 52,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "703:8:0"
            },
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "679:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:15:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "721:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:15:0"
            },
            "scope": 161,
            "src": "658:633:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1010
            ],
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1351:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1370:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1370:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 131,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1384:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1370:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:60:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1433:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1441:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1433:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1342:8:0"
            },
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1317:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:16:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:0"
            },
            "scope": 161,
            "src": "1299:156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1015
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1527:116:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1546:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1546:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 150,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1560:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1546:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1573:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:60:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1609:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 156,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1623:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1609:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 145,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1518:8:0"
            },
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1487:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:22:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:0"
            },
            "scope": 161,
            "src": "1463:180:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 162,
        "src": "145:1501:0"
      }
    ],
    "src": "40:1608:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-19T23:26:38.445Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}